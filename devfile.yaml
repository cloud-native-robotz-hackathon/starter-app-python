schemaVersion: 2.2.0
metadata:
  name: starter-app-python-new
attributes:
  # Define a volume at the Pod level, backed by our ConfigMap
  pod-overrides:
    spec:
      volumes:
        - name: continue-config-volume
          configMap:
            name: continue-config
            # Ensures file permissions are set correctly
            defaultMode: 0644   
components:
  - name: python
    attributes:
      # Mount the volume defined above into this specific container
      container-overrides:
        volumeMounts:
          - name: continue-config-volume
            # The target path inside the container where the file will be placed
            mountPath: /home/user/.continue/config.json
            # The key from the ConfigMap to mount. This makes it a file mount.
            subPath: config.json
    container:
      image: registry.redhat.io/devspaces/udi-rhel8@sha256:bc5d28c434089a312ab0944662e7702481ca4e898ef278cf61c0f683f35718df
      volumeMounts:
        - name: venv
          path: /home/user/.venv
      memoryLimit: 2G
      mountSources: true
  - name: venv
    volume:
      size: 1G
events:
  postStart:
    - install-continue-extension
commands:
  - id: install-continue-extension
    exec:
      label: "Install Continue Extension"
      component: python
      commandLine: |
        # Wait for Code Server to be ready and install extension with retries
        sleep 10
        for i in {1..3}; do
          if command -v code >/dev/null 2>&1; then
            echo "Attempt $i: Installing Continue extension..."
            if code --install-extension continue.continue --force; then
              echo "Continue extension installed successfully"
              break
            else
              echo "Installation attempt $i failed, retrying..."
              sleep 5
            fi
          else
            echo "Code command not available, waiting..."
            sleep 10
          fi
        done
        echo "Extension installation process completed"
      group:
        kind: build
  - id: run
    exec:
      label: "Run the application"
      component: python
      workingDir: ${PROJECTS_ROOT}/starter-app-python
      commandLine: >-

          python -m venv /home/user/.venv/
          source /home/user/.venv/bin/activate

          pip install -r requirements.txt && export
          PYTHONDONTWRITEBYTECODE=1 && export
          PATH=$PATH:/home/user/.local/bin && gunicorn
          -b 0.0.0.0:8080 app --reload
      group:
        kind: run
